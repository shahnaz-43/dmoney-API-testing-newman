{
	"info": {
		"_postman_id": "40aa3c21-748a-49f4-a2b6-a8a0bfef2296",
		"name": "API testing - Postman Assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20666258"
	},
	"item": [
		{
			"name": "Login successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code validation\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.token;\r",
							"pm.collectionVariables.set(\"token\", token)\r",
							"pm.environment.set(\"token\",token)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"salman@grr.la\",\r\n    \"password\":\"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}{{login}}",
					"host": [
						"{{baseUrl}}{{login}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User input wrong email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code validation\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"User not found message validation \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"salman@grr\",\r\n    \"password\":\"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}{{login}}",
					"host": [
						"{{baseUrl}}{{login}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User input wrong password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code validation\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"User input wrong password\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Password incorrect\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"salman@grr.la\",\r\n    \"password\":\"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}{{login}}",
					"host": [
						"{{baseUrl}}{{login}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User list should show\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains('User list')\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Status code validation\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}{{userList}}",
					"host": [
						"{{baseUrl}}{{userList}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user list without token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code 401 validation\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"No Token Found! error message validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"No Token Found!\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}{{userList}}",
					"host": [
						"{{baseUrl}}{{userList}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user list with wrong token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User can't access with wrong token\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"Token expired!\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code 403 validation\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "werdg",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}{{userList}}",
					"host": [
						"{{baseUrl}}{{userList}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a New Customer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var radnomDigits=_.random(1000000,9999999);\r",
							"var code=\"0150\";\r",
							"var code_nid=\"123\"\r",
							"var phoneNumber=code+radnomDigits;\r",
							"var nid=code_nid+radnomDigits;\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)\r",
							"pm.environment.set(\"phoneNumber\",phoneNumber)\r",
							"\r",
							"pm.collectionVariables.set(\"nid\",nid)\r",
							"pm.environment.set(\"nid\",nid)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"User should create successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains('User created successfully');\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"var jsonData=pm.response.json();\r",
							"var id=jsonData.user.id;\r",
							"pm.collectionVariables.set(\"id\",id);\r",
							"pm.environment.set(\"id\",id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\",\r\n    \"phone_number\":\"{{phoneNumber}}\",\r\n    \"nid\":\"{{nid}}\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}{{createUser}}",
					"host": [
						"{{baseUrl}}{{createUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search the new customer by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code validation\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"ID validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.id).to.eql(pm.collectionVariables.get(\"id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/search/?id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"search",
						""
					],
					"query": [
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create existing Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});\r",
							"pm.test(\"User should not create if exists\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains('User already exists');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"name\": \"Shahnaz Begum\",\r\n        \"email\": \"Tomas37@gmail.com\",\r\n        \"password\": \"3V3vgUG23uk8Ple\",\r\n        \"phone_number\": \"01503720498\",\r\n        \"nid\": \"1233720498\",\r\n        \"role\": \"Customer\"\r\n       \r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}{{createUser}}",
					"host": [
						"{{baseUrl}}{{createUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update customer by  specific value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code validation\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Users specific phone number updated \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.phone_number).to.eql(\"01505248174\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"phone_number\":\"01505248174\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}{{updateUser}}",
					"host": [
						"{{baseUrl}}{{updateUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete user data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User deleted successfully\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}{{deleteUser}}",
					"host": [
						"{{baseUrl}}{{deleteUser}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://dmoney.professionaltrainingbd.com",
			"type": "string"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkBncnIubGEiLCJwYXNzd29yZCI6IjEyMzQiLCJpYXQiOjE2NTY0NDkxNzAsImV4cCI6MTY1NjQ1MDk3MH0.S5kvDwZnDBfw6jlSw4nKsOLr2MsAJCUFKtuU-9ZcmXQ"
		},
		{
			"key": "secretKey",
			"value": "ROADTOSDET",
			"type": "string"
		},
		{
			"key": "login",
			"value": "/user/login",
			"type": "string"
		},
		{
			"key": "userList",
			"value": "/user/list",
			"type": "string"
		},
		{
			"key": "searchUser",
			"value": "/user/search",
			"type": "string"
		},
		{
			"key": "createUser",
			"value": "/user/create",
			"type": "string"
		},
		{
			"key": "phoneNumber",
			"value": "01501567697"
		},
		{
			"key": "nid",
			"value": "1231567697"
		},
		{
			"key": "id",
			"value": 3927
		},
		{
			"key": "updateUser",
			"value": "/user/update/{{id}}",
			"type": "string"
		},
		{
			"key": "deleteUser",
			"value": "/user/delete/{{id}}",
			"type": "string"
		}
	]
}